#! /bin/sh

SRC_ROOT="/local/scale-product"
TARGETDIR='obj/generic'
MAKEFLAGS="-j$(expr $(nproc) \- 1)"
# export TRACE_FLAGS=--coverage
BUILD_TYPE=debug
# OPTIONAL BUILD_ROOT forces build to run make from $BUILD_ROOT
alias scd="cd $SRC_ROOT"
alias tcd="cd ./$TARGETDIR"


sclog ()
{
    filename=$(bfs $SRC_ROOT -type f -name "*.make.txt" -printf "%T+\t%p\n" | sort -r | fzf | awk '{print $2}')
    if [ -n "$filename" ]; then
        $VISUAL $filename
    fi
}


init_mezzanine ()
{
    buildID="$1";
    testbeds="$2";
    if [ "x$buildID" = "x" ] || [ "x$testbeds" = "x" ]; then
        echo "Error: missing arguments"
        echo "Expected: \"buildID\" \"testbeds\""
        return 1
    fi
    cd "/builds/automated/$buildID/src/daemons/scqad/" &&
        "$(make -s echo_targetdir)/scqadleader" -s -b $testbeds 'installSCQADOnCluster {}; configureClusters {}'
    return $?
}

rpmupdate ()
{
    sudo yum install --enablerepo=SCEL-master --enablerepo=CentOS-base --enablerepo=CentOS-updates $(cat $SRC_ROOT/re/stor/rpmlist_build)  --skip-broken -y
}

# copy local changes to buildvm source copy
scrsync ()
{
    CODE_DIR="$HOME/git/scale-product"
    rsync -avzh -e ssh --exclude-from="$HOME/.gitignore_global" --exclude-from="$CODE_DIR/.gitignore" $CODE_DIR/* buildvm:$SRC_ROOT
}


# ssh into buildvm and launch scmake in a screen session
# some cool things this lets me do
#   - If I lose connectivity my build isnt killed
#   - If I want to detach I can just ctrl-a d and ill end up back in the local terminal session
#   - If I run this while another build is in session it reattaches the existing build rather than starting a new one
rscmake ()
{
    if [ "x$BUILD_ROOT" = "x" ]; then
        BUILD_ROOT="$SRC_ROOT"
    fi
    # -m forces a new session to be created
    # ssh -t buildvm screen -dRR -s bash -S build "bash -c \"echo hi; source ~/.bash_profile; scmake\""
    ssh -t buildvm "source ~/.bash_profile; export BUILD_ROOT=$BUILD_ROOT; scmake $@"
}


scmake ()
{
    screen -dRR -S build -q bash -c "source ~/.bash_profile; BUILD_ROOT=\"$BUILD_ROOT\" screenless-scmake $@"
    tput bel
    tput bel
}


# call make on local build directory and log output
screenless-scmake ()
{
    if [ "x$1" != "x" ]; then
        TARGET_NAME="$1"
    else
        TARGET_NAME="all"
    fi

    # If were not in a subdirectory of the project root then run command from
    # project root
    if [ "x$BUILD_ROOT" != "x" ]; then
        cd $BUILD_ROOT
    elif [ "${PWD##$SRC_ROOT}" == "${PWD}" ]; then
        cd $SRC_ROOT
    fi

    LOGFILE="$TARGET_NAME.make.txt"

    echo -e "\n>>>>>>>> \e[94mStarting\e[0m <<<<<<<<"
    echo -e ">> Compiling ${PWD}\n"

    #output stderr and stdout to $LOGFILE and stderr to screen
    (
    export MAKEFLAGS
    export TARGETDIR
    export BUILD_TYPE
    make "$@" 2>&1 \
     | tee "$LOGFILE"  \
     | grep --color -P "error|"
    )


    if [ $? -eq 0 ]; then
        echo -e "\n>>>>>>>> \e[92mDone\e[0m <<<<<<<<"
    else
        echo -e "\n>>>>>>>> \e[91mKilled\e[0m <<<<<<<<"
    fi
}
