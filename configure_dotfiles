#! /bin/bash


# set -o xtrace
set -e

MY_DIR="$( cd "$(dirname "$0")" ; pwd -P )"
OLD_FILES="$HOME/oldfiles"


linkfile()
{
    SRCFILE="$MY_DIR/$1"
    if [ "x" = "x$2" ]; then
        DESTFILE=".$1"
    else
        DESTFILE="$2"
    fi

    if [ -L "$HOME/$DESTFILE" ]; then
        echo "$DESTFILE symlink exists. Good!"
        return 0
    elif [ -e "$HOME/$DESTFILE" ]; then
        if [ ! -e "$OLD_FILES/$DESTFILE" ]; then
            echo "Moving existing file too $OLD_FILES"
            mv -n "$HOME/$DESTFILE" "$OLD_FILES"
        else
            echo "ERROR: Failed to copy, file likely already exists in destination"
            exit 1
        fi
    fi

    ln -s "$SRCFILE" "$HOME/$DESTFILE"
}


# MAIN
cd "$MY_DIR"

mkdir -p "$OLD_FILES"
mkdir -p ~/.config
mkdir -p ~/tmp

linkfile . .dotfiles

linkfile gitconfig
linkfile git_template
linkfile gitignore_global

# linkfile profile
linkfile shellrc
linkfile zprofile
linkfile zshrc
linkfile packages/oh-my-zsh/ .oh-my-zsh
linkfile bash_profile
linkfile bashrc
linkfile aliasrc

linkfile scalerc

linkfile vim
linkfile vimrc
linkfile gvimrc
linkfile nvim .config/nvim

linkfile screenrc
linkfile xinitrc
linkfile Xresources
linkfile xprofile
linkfile bspwm .config/bspwm
linkfile sxhkd .config/sxhkd
linkfile weechat .config/weechat
linkfile pianobar .config/pianobar
linkfile Scripts Scripts
linkfile tmux.conf
linkfile ctags


echo "Update package installation? [y/N]"
read resp
if [ "$resp" = "Y" ] || [ "$resp" = "y" ]; then
    git submodule update --init --recursive
    . $MY_DIR/install-packages.sh
else
    echo "Skipping install-packages.sh"
fi

exit 0

