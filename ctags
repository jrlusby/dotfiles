--langdef=nesC
--langmap=nesC:.nc
--regex-nesC=/^[ \t]*configuration[ \t]*([a-zA-Z0-9_]+)/\1/b,configuration/
--regex-nesC=/^[ \t]*generic configuration[ \t]*([a-zA-Z0-9_]+)/\1/b,configuration/
--regex-nesC=/^[ \t]*command[ \t]*([a-zA-Z0-9_]+)[ \t]+([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)[ \t]*\(/\1 \2\.\3/c,command/
--regex-nesC=/.*\.([a-zA-Z0-9]+)[ \t]*->.*/\1/d,definition/
--regex-nesC=/^[ \t]*event[ \t]*([a-zA-Z0-9_]+)[ \t]+([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)[ \t]*\(/\1 \2\.\3/e,event/
--regex-nesC=/^[ \t]*void[ \t]+([a-zA-Z0-9_]+)[ \t]*\(/void \1/f,function/
--regex-nesC=/^[ \t]*interface[ \t]*([a-zA-Z0-9_]+)/\1/i,interface/
--regex-nesC=/^[ \t]*generic module[ \t]*([a-zA-Z0-9_]+)/\1/m,module/
--regex-nesC=/^[ \t]*module[ \t]*([a-zA-Z0-9_]+)/\1/m,module/
--regex-nesC=/^[ \t]*task[ \t]*([a-zA-Z0-9_]+)[ \t]+([a-zA-Z0-9_]+)[ \t]*\(/\1 \2/t,task/
--regex-nesC=/^[ \t]*result_t[ \t]+([a-zA-Z0-9_]+)[ \t]*\(/result_t \1/r,result/
--regex-nesC=/^[ \t]*uses[ \t]+interface[ \t]+[a-zA-Z0-9_]+[a-zA-Z0-9 \t]+as[ \t]+([a-zA-Z0-9_]+)/\1/u,uses/
--langdef=thrift
--langmap=thrift:.thrift
--regex-thrift=/^[ \t]*struct[ \t]*([a-zA-Z0-9_]+)/\1/c,classes/
--regex-thrift=/^[ \t]*enum[ \t]*([a-zA-Z0-9_]+)/\1/T,types/
--regex-thrift=/^[ \t]*[a-zA-Z0-9_<>\.]+[ \t]*([a-zA-Z0-9_]+)\(/\1/m,methods/
--regex-thrift=/^[ \t]*([A-Z0-9_]+)[ \t]*=/\1/C,constants/
